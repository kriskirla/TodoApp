// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TodoApp.Data;

#nullable disable

namespace TodoApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TodoApp.Models.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int?>("MediaType")
                        .HasColumnType("integer")
                        .HasColumnName("media_type");

                    b.Property<string>("MediaUrl")
                        .HasColumnType("text")
                        .HasColumnName("media_url");

                    b.Property<Guid?>("TodoListId")
                        .HasColumnType("uuid")
                        .HasColumnName("list_id");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("todo_items");
                });

            modelBuilder.Entity("TodoApp.Models.TodoList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("todo_lists");
                });

            modelBuilder.Entity("TodoApp.Models.TodoListShare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("Permission")
                        .HasColumnType("integer")
                        .HasColumnName("permission");

                    b.Property<string>("SharedWithUserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<Guid?>("TodoListId")
                        .HasColumnType("uuid")
                        .HasColumnName("list_id");

                    b.HasKey("Id");

                    b.HasIndex("TodoListId");

                    b.ToTable("todo_list_shares");
                });

            modelBuilder.Entity("TodoApp.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TodoApp.Models.TodoItem", b =>
                {
                    b.HasOne("TodoApp.Models.TodoList", null)
                        .WithMany("Items")
                        .HasForeignKey("TodoListId");
                });

            modelBuilder.Entity("TodoApp.Models.TodoListShare", b =>
                {
                    b.HasOne("TodoApp.Models.TodoList", null)
                        .WithMany("SharedWith")
                        .HasForeignKey("TodoListId");
                });

            modelBuilder.Entity("TodoApp.Models.TodoList", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("SharedWith");
                });
#pragma warning restore 612, 618
        }
    }
}
